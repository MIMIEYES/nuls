<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.nuls.db.dao.impl.mybatis.mapper.AccountMapper">

    <resultMap id="BaseResultMap" type="io.nuls.db.entity.AccountPo">
        <id column="address" jdbcType="VARCHAR" property="address"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="alias" jdbcType="VARCHAR" property="alias"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="status" javaType="Integer" property="status"/>
    </resultMap>

    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="io.nuls.db.entity.AccountPo">
        <result column="pub_key" jdbcType="VARBINARY" property="pubKey"/>
        <result column="pri_key" jdbcType="VARBINARY" property="priKey"/>
        <result column="pri_seed" jdbcType="VARBINARY" property="priSeed"/>
        <result column="extend" jdbcType="VARBINARY" property="extend"/>
    </resultMap>

    <sql id="Base_Column_List">
        address, create_time, alias, version, status
    </sql>
    <sql id="Blob_Column_List">
        pub_key, pri_key, pri_seed, extend
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from account
        where address = #{address,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from account
        where address = #{address,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="io.nuls.db.entity.AccountPo">
        insert into account (address, create_time,
        alias, version, status, pub_key, pri_key, pri_seed, extend)
        values (#{address,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT},
        #{alias,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER},#{status,jdbcType=INTEGER},
        #{pubKey,jdbcType=VARBINARY}, #{priKey,jdbcType=VARBINARY},
        #{priSeed,jdbcType=VARBINARY}, #{extend,jdbcType=VARBINARY})
    </insert>

    <update id="updateByPrimaryKey" parameterType="io.nuls.db.entity.AccountPo">
        update account
        set address = #{address,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=BIGINT},
        alias = #{alias,jdbcType=VARCHAR},
        version = #{version,jdbcType=INTEGER},
        status = #{status,jdbcType=INTEGER},
        pubKey = #{pubKey,jdbcType=VARBINARY},
        pri_key = #{priKey,jdbcType=VARBINARY},
        priSeed = #{priSeed,jdbcType=VARBINARY},
        extend = #{extend,jdbcType=VARBINARY}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateAlias" parameterType="io.nuls.db.entity.AccountPo">
        update account
        set alias = #{alias,jdbcType=VARCHAR}
        where address = #{address,jdbcType=VARCHAR}
    </update>

    <insert id="batchInsert" parameterType="java.util.List">
        insert into account (address, create_time,
        alias, version, status, pub_key, pri_key, pri_seed, extend)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id,jdbcType=VARCHAR}, #{item.address,jdbcType=VARCHAR}, #{item.createTime,jdbcType=BIGINT},
            #{item.alias,jdbcType=VARCHAR}, #{item.version,jdbcType=INTEGER}, #{item.status,jdbcType=INTEGER},
            #{item.pubKey,jdbcType=VARBINARY}, #{item.priKey,jdbcType=VARBINARY}, #{item.priSeed,jdbcType=VARBINARY}, #{item.extend,jdbcType=VARBINARY})
        </foreach>
    </insert>

    <select id="countAll" resultType="java.lang.Long">
        select count(id) from account
    </select>

    <select id="selectList" parameterType="io.nuls.db.dao.impl.mybatis.util.Searchable" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from account
        <include refid="io.nuls.db.dao.impl.mybatis.common.CommonMapper.Serach_Where"/>
        ORDER by create_time desc
    </select>
    <select id="selectCount" parameterType="io.nuls.db.dao.impl.mybatis.util.Searchable" resultType="java.lang.Long">
        select count(id) from account
        <include refid="io.nuls.db.dao.impl.mybatis.common.CommonMapper.Serach_Where"/>
    </select>

</mapper>
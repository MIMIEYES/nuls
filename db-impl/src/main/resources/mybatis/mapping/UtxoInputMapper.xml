<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.nuls.db.dao.impl.mybatis.mapper.UtxoInputPoMapper">
  <resultMap id="BaseResultMap" type="io.nuls.db.entity.UtxoInputPo">
    <id column="tx_hash" jdbcType="VARCHAR" property="txHash" />
    <id column="from_index" jdbcType="INTEGER" property="fromIndex" />
    <result column="in_index" jdbcType="INTEGER" property="inIndex" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="io.nuls.db.entity.UtxoInputPo">
    <result column="sign" jdbcType="VARBINARY" property="sign" />
  </resultMap>
  <sql id="Base_Column_List">
    tx_hash, from_index, in_index
  </sql>
  <sql id="Blob_Column_List">
    sign
  </sql>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from utxo_input
    where tx_hash = #{txHash,jdbcType=VARCHAR}
    and from_index = #{fromIndex,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from utxo_input
    where tx_hash = #{txHash,jdbcType=VARCHAR}
    and from_index = #{fromIndex,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="io.nuls.db.entity.UtxoInputPo">
    insert into utxo_input (tx_hash, from_index, in_index,
    sign)
    values (#{txHash,jdbcType=VARCHAR}, #{fromIndex,jdbcType=INTEGER}, #{inIndex,jdbcType=INTEGER},
    #{sign,jdbcType=VARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="io.nuls.db.entity.UtxoInputPo">
    insert into utxo_input
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="txHash != null">
        tx_hash,
      </if>
      <if test="fromIndex != null">
        from_index,
      </if>
      <if test="inIndex != null">
        in_index,
      </if>
      <if test="sign != null">
        sign,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="txHash != null">
        #{txHash,jdbcType=VARCHAR},
      </if>
      <if test="fromIndex != null">
        #{fromIndex,jdbcType=INTEGER},
      </if>
      <if test="inIndex != null">
        #{inIndex,jdbcType=INTEGER},
      </if>
      <if test="sign != null">
        #{sign,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.nuls.db.entity.UtxoInputPo">
    update utxo_input
    <set>
      <if test="inIndex != null">
        in_index = #{inIndex,jdbcType=INTEGER},
      </if>
      <if test="sign != null">
        sign = #{sign,jdbcType=VARBINARY},
      </if>
    </set>
    where tx_hash = #{txHash,jdbcType=VARCHAR}
    and from_index = #{fromIndex,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="io.nuls.db.entity.UtxoInputPo">
    update utxo_input
    set in_index = #{inIndex,jdbcType=INTEGER},
    sign = #{sign,jdbcType=VARBINARY}
    where tx_hash = #{txHash,jdbcType=VARCHAR}
    and from_index = #{fromIndex,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.nuls.db.entity.UtxoInputPo">
    update utxo_input
    set in_index = #{inIndex,jdbcType=INTEGER}
    where tx_hash = #{txHash,jdbcType=VARCHAR}
    and from_index = #{fromIndex,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" parameterType="java.util.List">
    insert into utxo_input (tx_hash,in_index, from_index,sign)
    values
    <foreach collection="list" item="item" index="index" separator="," >
      (#{item.txHash,jdbcType=VARCHAR},#{item.in_index,jdbcType=INTEGER}, #{item.from_index,jdbcType=INTEGER},
      #{item.sign,jdbcType=VARBINARY})
    </foreach>
  </insert>
  <select id="countAll"  resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(hash) from utxo_input
  </select>
  <select id="selectList" parameterType="io.nuls.db.dao.impl.mybatis.util.Searchable" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from utxo_input
    <include refid="io.nuls.db.dao.impl.mybatis.common.CommonMapper.Serach_Where"/>
  </select>
  <select id="selectCount" parameterType="io.nuls.db.dao.impl.mybatis.util.Searchable" resultType="java.lang.Long">
    select count(hash) from utxo_input
    <include refid="io.nuls.db.dao.impl.mybatis.common.CommonMapper.Serach_Where"/>
  </select>
</mapper>
